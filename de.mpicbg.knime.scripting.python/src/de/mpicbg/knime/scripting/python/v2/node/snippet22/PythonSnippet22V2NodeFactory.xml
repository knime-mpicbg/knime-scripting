<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE knimeNode PUBLIC "-//UNIKN//DTD KNIME Node 2.0//EN" "http://www.knime.org/Node.dtd">
<knimeNode icon="../../python-logo-generic.png" type="Manipulator">

    <name>Python Snippet 2:2</name>

    <shortDescription>
        Executes Python code.
    </shortDescription>

    <fullDescription>
        <intro>
            <p>
                This node executes a Python script. A local Python installation is required as well
                as the availability of the Python 'pandas'-package. Under "KNIME > Preferences > KNIME 
                > Python Scriping" a Python2 and Python3 installation can be provided. Depending on the
                preference settings either Python2 or Python3 will be used.
                The nodes provides a simple editor for Python code as well as the possibility to load
                and configure Python code via RGG-templates. RGG[1]-templates can be provided with templates files
                and allow script configuration based on a graphical user interface.                
                URLs of template files can be set in "KNIME > Preferences > KNIME > Python Scripting"
                <br/>
                The input data table from KNIME is provided to Python as pandas dataframe and is
                named "kIn". The output data table is expected to be a pandas dataframe named "pyOut".
            </p>
            <p>
                Script Editor:<br/>
                Copy, cut or paste and Python code to the editor and/or select the columns from your data table. If a
                template is loaded used the GUI to adapt the script to the input data.
            </p>
            <p>
                Templates:<br/>
                Select a snippet template from the template repository (double-click or "Use this template") to use that
                script and see the GUI.
                The description explains what a snippet does.
                Then configure the GUI according to your input data.
            </p>
            <p>
                Open External:<br/>
                According to preference settings under "KNIME > Preferences > KNIME > Python Scripting > Open In"
                either a Jupyter notebook will be created and launched ready to load and process KNIME data, or Python will be 
                started via command line, loading the KNIME input table and providing the Python script at the clipboard.
            </p>

            <p>
	            [1] RGG (<a href="http://rgg.r-forge.r-project.org/index.html">R GUI Generator</a>)         
            </p>
        </intro>

		<option name="Open external">If checked, Python will be opened externally, either as Jupyter notebook or via command line.
        </option>
        <option name="Scipt Editor/Unlink from Template">Gives access to the Python script after adaptation by the GUI.
        </option>
        <option name="Scipt Editor/Edit Template">Gives access to the RGG script.
        </option>
        <option name="Templates/Refresh">Loads again the template file.
        </option>
        <option name="Templates/Gallery">Generate a temporary webpage shown in a browser which gives an overview about
            all available templates.
        </option>
        <option name="Templates/Description,Source">Description explains what this snippet does. Source displays the RGG
            script.
        </option>
        <option name="Templates/Use this template">Click to load the GUI (or double-click onto the template)
        </option>
        
    </fullDescription>

    <ports>
        <inPort index="0" name="Data table (kIn1)">
        	A data table
        </inPort>
        <inPort index="1" name="Data table (kIn2)">
        	A data table
        </inPort>
        <outPort index="0" name="Data table (pyOut1) returned from the snippet">
        	The data table that the snippet returns
        </outPort>
        <outPort index="1" name="Data table (pyOut2) returned from Python">
        	The data table that the Python snippet returns
        </outPort>
    </ports>

</knimeNode>
